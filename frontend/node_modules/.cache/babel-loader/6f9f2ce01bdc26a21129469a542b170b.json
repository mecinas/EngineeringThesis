{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/Projekty 2020-2021L/MyGrzybiarze/frontend/src/components/account/AccountManager.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Container, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport '../../styles/account/AccountManager.css';\nimport UserInfoTable from './UserInfoTable';\nimport UserAvatar from './UserAvatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountManager() {\n  _s();\n\n  const {\n    user\n  } = useAuth0();\n  let history = useHistory();\n\n  const putAvatar = data => {\n    var url = \"http://localhost:5000/avatar\";\n    axios.put(url, data, {\n      headers: {\n        'accept': 'application/json',\n        'Accept-Language': 'en-US,en;q=0.8',\n        'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error.message);\n    });\n    setTimeout(() => {\n      getAvatar();\n    }, 2000);\n  };\n\n  const getAvatar = (setSource, encodeImage) => {\n    const time = new Date().getTime();\n    var url = \"http://localhost:5000/avatar\";\n\n    if (user !== undefined) {\n      axios.get(url, {\n        responseType: 'arraybuffer',\n        params: {\n          email: user.email,\n          t: time\n        }\n      }).then(response => {\n        setSource(encodeImage(response.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n    }\n  };\n\n  const deleteUser = () => {\n    var url = \"http://localhost:5000/register\";\n    axios.delete(url, {\n      data: {\n        email: user.email\n      }\n    }).then(response => {\n      history.push(\"/\");\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n  const getInfo = set => {\n    var url = \"http://localhost:5000/getInfo\";\n\n    if (user !== undefined) {\n      axios.get(url, {\n        params: {\n          email: user.email\n        }\n      }).then(resp => {\n        setUserInfo(resp.data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"account_container\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(UserAvatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(UserInfoTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AccountManager, \"DJYFDCiLZyIs741YpSVlkC6YP/Q=\", false, function () {\n  return [useAuth0, useHistory];\n});\n\n_c = AccountManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountManager\");","map":{"version":3,"sources":["/home/szymon/Desktop/Projekty 2020-2021L/MyGrzybiarze/frontend/src/components/account/AccountManager.jsx"],"names":["React","axios","useAuth0","Container","Row","useHistory","UserInfoTable","UserAvatar","AccountManager","user","history","putAvatar","data","url","put","headers","_boundary","then","response","console","log","catch","error","message","setTimeout","getAvatar","setSource","encodeImage","time","Date","getTime","undefined","get","responseType","params","email","t","deleteUser","delete","push","getInfo","set","resp","setUserInfo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {useAuth0} from '@auth0/auth0-react'\nimport { Container, Row,} from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\n\nimport '../../styles/account/AccountManager.css';\nimport UserInfoTable from './UserInfoTable'\nimport UserAvatar from './UserAvatar'\n\nexport default function AccountManager() {\n    const { user } = useAuth0();\n    let history = useHistory();\n\n    const putAvatar = (data) => {\n        var url = \"http://localhost:5000/avatar\"\n        axios.put(url, data, {\n            headers: {\n                'accept': 'application/json',\n                'Accept-Language': 'en-US,en;q=0.8',\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n            }\n        })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error.message)\n            })\n        setTimeout(() => {\n            getAvatar()\n        }, 2000);\n    }\n\n    const getAvatar = (setSource, encodeImage) => {\n        const time = new Date().getTime();\n        var url = \"http://localhost:5000/avatar\"\n        if (user !== undefined) {\n            axios.get(url, {\n                responseType: 'arraybuffer',\n                params: {\n                    email: user.email,\n                    t: time\n                }\n            })\n                .then(response => {\n                    setSource(encodeImage(response.data))\n                })\n                .catch(error => {\n                    console.log(error.message)\n                })\n        }\n    }\n\n    const deleteUser = () => {\n        var url = \"http://localhost:5000/register\"\n        axios.delete(url, { data: { email: user.email } })\n            .then(response => {\n                history.push(\"/\")\n            })\n            .catch(error => {\n                console.log(error.message)\n            })\n    }\n\n    const getInfo = (set) => {\n        var url = \"http://localhost:5000/getInfo\"\n        if (user !== undefined) {\n            axios.get(url, {\n                params: {\n                    email: user.email\n                }\n            })\n                .then(resp => {\n                    setUserInfo(resp.data)\n                })\n        }\n    }\n\n    return (\n        <Container className=\"account_container\">\n            <Row>\n                <UserAvatar />\n            </Row>\n            <Row>\n                <UserInfoTable />\n            </Row>\n        </Container>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}