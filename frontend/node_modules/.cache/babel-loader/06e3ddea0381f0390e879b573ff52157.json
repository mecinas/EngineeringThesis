{"ast":null,"code":"var _jsxFileName = \"/home/szymon/Desktop/Projekty 2020-2021L/MyGrzybiarze/frontend/src/components/AccountManager.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'; //Odbieranie fotki\n//Zaprojektowanie zarządzania użytkownikiem\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountManager() {\n  _s();\n\n  const [source, setSource] = useState({\n    source: null\n  });\n\n  const getAvatar = () => {\n    var url = \"http://localhost:5000/getAvatar\";\n    axios.get(url, {\n      responseType: 'arraybuffer'\n    }).then(response => {\n      console.log(_imageEncode(result.data));\n    });\n  };\n\n  function _imageEncode(arrayBuffer) {\n    let u8 = new Uint8Array(arrayBuffer);\n    let b64encoded = btoa([].reduce.call(new Uint8Array(arrayBuffer), function (p, c) {\n      return p + String.fromCharCode(c);\n    }, ''));\n    let mimetype = \"image/jpeg\";\n    return \"data:\" + mimetype + \";base64,\" + b64encoded;\n  }\n\n  useEffect(() => {\n    getAvatar();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: source\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AccountManager, \"t3i2zUWV35AVN5eqG3Z5GGw60GY=\");\n\n_c = AccountManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountManager\");","map":{"version":3,"sources":["/home/szymon/Desktop/Projekty 2020-2021L/MyGrzybiarze/frontend/src/components/AccountManager.jsx"],"names":["axios","React","useState","useEffect","Container","Row","Col","AccountManager","source","setSource","getAvatar","url","get","responseType","then","response","console","log","_imageEncode","result","data","arrayBuffer","u8","Uint8Array","b64encoded","btoa","reduce","call","p","c","String","fromCharCode","mimetype"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC,C,CAEA;AACA;;;AACA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AAACM,IAAAA,MAAM,EAAE;AAAT,GAAD,CAApC;;AAGA,QAAME,SAAS,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAG,iCAAV;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAe;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KAAf,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAM,CAACC,IAAR,CAAxB;AACH,KAHL;AAIH,GAND;;AAQA,WAASF,YAAT,CAAuBG,WAAvB,EAAoC;AAChC,QAAIC,EAAE,GAAG,IAAIC,UAAJ,CAAeF,WAAf,CAAT;AACA,QAAIG,UAAU,GAAGC,IAAI,CAAC,GAAGC,MAAH,CAAUC,IAAV,CAAe,IAAIJ,UAAJ,CAAeF,WAAf,CAAf,EAA2C,UAASO,CAAT,EAAWC,CAAX,EAAa;AAAC,aAAOD,CAAC,GAACE,MAAM,CAACC,YAAP,CAAoBF,CAApB,CAAT;AAAgC,KAAzF,EAA0F,EAA1F,CAAD,CAArB;AACA,QAAIG,QAAQ,GAAC,YAAb;AACA,WAAO,UAAQA,QAAR,GAAiB,UAAjB,GAA4BR,UAAnC;AACH;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA3BuBD,c;;KAAAA,c","sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n//Odbieranie fotki\n//Zaprojektowanie zarządzania użytkownikiem\nexport default function AccountManager() {\n    const [source, setSource] = useState({source: null})\n\n\n    const getAvatar = () => {\n        var url = \"http://localhost:5000/getAvatar\"\n        axios.get(url, { responseType: 'arraybuffer' })\n            .then(response => {\n                console.log(_imageEncode(result.data))\n            })\n    }\n\n    function _imageEncode (arrayBuffer) {\n        let u8 = new Uint8Array(arrayBuffer)\n        let b64encoded = btoa([].reduce.call(new Uint8Array(arrayBuffer),function(p,c){return p+String.fromCharCode(c)},''))\n        let mimetype=\"image/jpeg\"\n        return \"data:\"+mimetype+\";base64,\"+b64encoded\n    }\n\n    useEffect(() => {\n        getAvatar()\n    }, [])\n    return (\n        <Container>\n            <img src={source}/>\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}